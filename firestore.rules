rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    function isAdmin() {
      return isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    function isContentOwner() {
      return isAuthenticated() && (
        resource.data.userId == request.auth.uid || 
        resource.data.createdBy == request.auth.uid ||
        (resource.data.participants != null && resource.data.participants.hasAny([request.auth.uid]))
      );
    }

    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && request.auth.uid == userId;
      allow update, delete: if isOwner(userId) || isAdmin();
      
      // User connections subcollection
      match /connections/{connectionId} {
        allow read: if isAuthenticated();
        allow write: if isOwner(userId) || isAdmin();
      }
    }

    // Posts collection
    match /posts/{postId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && (resource.data.userId == request.auth.uid || isAdmin());
      allow delete: if isAuthenticated() && (
        resource.data.userId == request.auth.uid || 
        isAdmin() ||
        // Allow deletion if the user is being deleted
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) == false
      );
    }

    // Comments collection
    match /comments/{commentId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && (resource.data.userId == request.auth.uid || isAdmin());
      allow delete: if isAuthenticated() && (
        resource.data.userId == request.auth.uid || 
        isAdmin() ||
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) == false
      );
    }

    // Events collection
    match /events/{eventId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && (resource.data.createdBy == request.auth.uid || isAdmin());
      allow delete: if isAuthenticated() && (
        resource.data.createdBy == request.auth.uid || 
        isAdmin() ||
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) == false
      );
    }

    // Messages collection
    match /messages/{messageId} {
      allow read: if isAuthenticated() && (
        resource.data.senderId == request.auth.uid || 
        resource.data.recipientId == request.auth.uid || 
        isAdmin()
      );
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && (
        resource.data.senderId == request.auth.uid || 
        resource.data.recipientId == request.auth.uid || 
        isAdmin()
      );
      allow delete: if isAuthenticated() && (
        resource.data.senderId == request.auth.uid || 
        resource.data.recipientId == request.auth.uid || 
        isAdmin() ||
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) == false
      );
    }

    // Reports collection
    match /reports/{reportId} {
      allow read: if isAdmin();
      allow create: if isAuthenticated();
      allow update, delete: if isAdmin();
    }

    // Analytics collection
    match /analytics/{docId} {
      allow read: if isAdmin();
      allow write: if isAdmin();
    }
  }
} 